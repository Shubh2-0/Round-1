package com.masai;

import java.security.PublicKey;

public class Sorting_Algo {

//	1. MERGE SORT

	public static void ms(int[] arr, int si, int ei) {

		int mid = si + (ei - si) / 2;

		ms(arr, si, mid);
		ms(arr, mid + 1, ei);
		Merger(arr, si, mid, ei);

	}

	public static void Merger(int[] arr,int si,int mid,int ei){

		int[] merger = new int[ei-si+1];

		int idx1 = si;
		int idx2 = mid+1;
		int x = 0;

		while(idx1<= mid && idx2<=ei){

		if(arr[idx1]<=arr[idx2])
		merger[x++] = arr[idx1++];

		else 
		merger[x++] = arr[idx2++];


		}

		while(idx1<=mid)
		merger[x++] = arr[idx1++];


		while(idx2<=ei)
		merger[x++] = arr[idx2++];



		for(int i=0,j=si;i<merger.length;i++,j++)
		arr[j] = merger[i];


		/*
		 *  TIME  : O(nlogn)
		 *  Space : O(n)
		 *  pros : Better then bubble sort and selection sort
		 *  
		 *  cons : Use Extra Space for Merging Operation 
		 */
			


		}

	
	    
	
	

	
//	2. BUBBLE SORT
	
	
	

	
		
		for(int i=0;i<arr.length-1;i++) {
			
			for(int j=0;j<arr.length-1;j++) {
				
				if(arr[j] > arr[j+1]) {
					
					int temp = arr[j];
					arr[j] = arr[j+1];
					arr[j+1] = temp;
					
					
				}
				
				
			}
			
		

	
		
		
		
	}
    

	
	
	
	
	
	
}
